{"version":3,"sources":["components/qr-code.js","components/qrImageStyle.js","App.js","rpc.js","serviceWorker.js","index.js"],"names":["qrCodeGenerator","QrCode","config","$element","window","self","vendor_qrcode","createQRCode","text","level","version","quiet","qr","vqr","addData","make","qrModuleCount","getModuleCount","quietModuleCount","moduleCount","isDark","row","col","drawModuleRounded","context","settings","left","top","width","right","bottom","rowT","rowB","colL","colR","radius","Math","floor","min","max","center","northwest","north","northeast","east","southeast","south","southwest","west","round","ctx","l","t","r","b","rad","nw","ne","se","sw","lal","x0","y0","x1","y1","r0","r1","lineTo","arcTo","moveTo","drawModuleRoundedDark","mlla","x","y","drawModuleRoundendLight","drawModules","moduleSize","size","beginPath","fill","fillStyle","gradient","type","position","colorStops","absolutePosition","map","coordinate","createLinearGradient","apply","Error","createRadialGradient","forEach","offset","color","addColorStop","setFill","drawOnCanvas","canvas","minVersion","maxVersion","err","createMinQRCode","ecLevel","getContext","background","fillRect","drawBackground","defaults","options","Object","assign","HTMLCanvasElement","height","clearRect","$canvas","document","createElement","createCanvas","appendChild","qrcode","typeNumber","errorCorrectLevel","_typeNumber","_errorCorrectLevel","QRErrorCorrectLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","modules","Array","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","c","pos","QRUtil","getPatternPosition","i","length","j","bits","getBCHTypeNumber","mod","i2","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","dataList","rsBlocks","QRRSBlock","getRSBlocks","buffer","qrBitBuffer","put","getMode","getLength","getLengthInBits","write","totalDataCount","dataCount","putBit","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","getBuffer","rsPoly","getErrorCorrectPolynomial","modPoly","qrPolynomial","modIndex","getAt","totalCodeCount","index","createBytes","newData","qr8BitByte","push","minLostPoint","pattern","lostPoint","getLostPoint","getBestMaskPattern","stringToBytes","s","str","utf8","charcode","charCodeAt","toUTF8Array","QRMode","QRMaskPattern","PATTERN_POSITION_TABLE","getBCHDigit","digit","d","errorCorrectLength","a","multiply","QRMath","gexp","mode","sameCount","count","darkCount","abs","EXP_TABLE","LOG_TABLE","n","num","shift","_num","e","glog","ratio","RS_BLOCK_TABLE","qrRSBlock","rsBlock","getRsBlockTable","list","_buffer","_length","bufIndex","bit","_mode","_bytes","QrImageStyle","props","state","image","prevContent","qrContent","this","src","alt","content","render","toDataURL","React","Component","constants","RPC_SERVER","RPC_CREDS","SAMPLE_COMMANDS","SAMPLE_COMMAND_NAMES","RPCError","code","params","captureStackTrace","name","App","handleOptionChange","changeEvent","setState","useAuth","qrClassesContainer","qrClassesImg","command","key","amount","nanoAmount","output","validKey","fetchingRPC","paymentActive","activeCommandId","activeCommandName","tokenText1","tokenText2","tokenText3","qrSize","qrState","qrHidden","payinfoHidden","apiText","tokenPrice","getRPC","bind","buyTokens","checkTokens","cancelOrder","prepareForPayment","handleCommandChange","handleKeyChange","handleAmountChange","handleNanoChange","handleRPCError","selectCommand","postData","updateQR","double","action","then","nano","parseFloat","token_price","catch","error","event","target","value","query","$","param","JSON","parse","parseInt","Number","isSafeInteger","isFloat","tokens","address","raw","MnanoToRaw","toString","input","isNumeric","Nano","from","NANO","to","val","String","slice","eventKey","console","log","message","writeOutput","isInteger","token_amount","token_key","keys","json","payment_amount","timer","setInterval","order_time_left","tokens_ordered","tokens_total","clearInterval","stringify","server","didTimeOut","headers","Authorization","Base64","encode","Promise","resolve","reject","timeout","setTimeout","fetch","method","cache","credentials","redirect","referrerPolicy","body","response","clearTimeout","status","result","className","href","DropdownButton","title","id","Dropdown","Item","onSelect","InputGroup","Prepend","Text","FormControl","aria-describedby","maxLength","placeholder","onChange","autoComplete","checked","Button","variant","disabled","onClick","Parser","as","rows","readOnly","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,K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","file":"static/js/main.174be97a.chunk.js","sourcesContent":["/*! https://github.com/nimiq/qr-encoder */\r\n/*! Edits by Joohansson */\r\n/*! Modified self['QrCode'] = QrCode; into window.self to work with reactJS */\r\n/*! Some other react warning modifications */\r\n\r\nlet qrCodeGenerator = null;\r\n\r\n// Library interface\r\nexport default class QrCode {\r\n    static render(config, $element) {\r\n        qrCodeGenerator(config, $element);\r\n    }\r\n}\r\n// avoid that closure compiler strips these away\r\n//QrCode['render'] = QrCode.render; //Joohansson edit\r\nwindow.self['QrCode'] = QrCode;\r\n\r\n\r\n/*! jquery-qrcode v0.14.0 - https://larsjung.de/jquery-qrcode/ */\r\n(function(vendor_qrcode) {\r\n\r\n    // Wrapper for the original QR code generator.\r\n    function createQRCode(text, level, version, quiet) {\r\n        var qr = {};\r\n\r\n        var vqr = vendor_qrcode(version, level);\r\n        vqr.addData(text);\r\n        vqr.make();\r\n\r\n        quiet = quiet || 0;\r\n\r\n        var qrModuleCount = vqr.getModuleCount(),\r\n            quietModuleCount = vqr.getModuleCount() + 2 * quiet;\r\n\r\n        function isDark(row, col) {\r\n            row -= quiet;\r\n            col -= quiet;\r\n\r\n            if (row < 0 || row >= qrModuleCount || col < 0 || col >= qrModuleCount) {\r\n                return false;\r\n            }\r\n            return vqr.isDark(row, col);\r\n        }\r\n\r\n        qr.text = text;\r\n        qr.level = level;\r\n        qr.version = version;\r\n        qr.moduleCount = quietModuleCount;\r\n        qr.isDark = isDark;\r\n//        qr.addBlank = addBlank;\r\n\r\n        return qr;\r\n    }\r\n\r\n    // Returns a minimal QR code for the given text starting with version `minVersion`.\r\n    // Returns `undefined` if `text` is too long to be encoded in `maxVersion`.\r\n    function createMinQRCode(text, level, minVersion, maxVersion, quiet) {\r\n        minVersion = Math.max(1, minVersion || 1);\r\n        maxVersion = Math.min(40, maxVersion || 40);\r\n        for (var version = minVersion; version <= maxVersion; version += 1) {\r\n            try {\r\n                return createQRCode(text, level, version, quiet);\r\n            } catch (err) { }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    function drawBackground(qr, context, settings) {\r\n        if (settings.background) {\r\n            context.fillStyle = settings.background;\r\n            context.fillRect(settings.left, settings.top, settings.size, settings.size);\r\n        }\r\n    }\r\n\r\n    // used when center is filled\r\n    function drawModuleRoundedDark(ctx, l, t, r, b, rad, nw, ne, se, sw) {\r\n        //let moveTo = (x, y) => ctx.moveTo(Math.floor(x), Math.floor(y));\r\n        if (nw) {\r\n            ctx.moveTo(l + rad, t);\r\n        } else {\r\n            ctx.moveTo(l, t);\r\n        }\r\n\r\n        function lal(b, x0, y0, x1, y1, r0, r1) {\r\n            if (b) {\r\n                ctx.lineTo(x0 + r0, y0 + r1);\r\n                ctx.arcTo(x0, y0, x1, y1, rad);\r\n            } else {\r\n                ctx.lineTo(x0, y0);\r\n            }\r\n        }\r\n\r\n        lal(ne, r, t, r, b, -rad, 0);\r\n        lal(se, r, b, l, b, 0, -rad);\r\n        lal(sw, l, b, l, t, rad, 0);\r\n        lal(nw, l, t, r, t, 0, rad);\r\n    }\r\n\r\n    // used when center is empty\r\n    function drawModuleRoundendLight(ctx, l, t, r, b, rad, nw, ne, se, sw) {\r\n        function mlla(x, y, r0, r1) {\r\n            ctx.moveTo(x+r0, y);\r\n            ctx.lineTo(x, y);\r\n            ctx.lineTo(x, y+r1);\r\n            ctx.arcTo(x, y, x+r0, y, rad);\r\n        }\r\n\r\n        if (nw) mlla(l, t, rad, rad);\r\n        if (ne) mlla(r, t, -rad, rad);\r\n        if (se) mlla(r, b, -rad, -rad);\r\n        if (sw) mlla(l, b, rad, -rad);\r\n    }\r\n\r\n    function drawModuleRounded(qr, context, settings, left, top, width, row, col) {\r\n        var isDark = qr.isDark,\r\n            right = left + width,\r\n            bottom = top + width,\r\n            rowT = row - 1,\r\n            rowB = row + 1,\r\n            colL = col - 1,\r\n            colR = col + 1,\r\n            radius = Math.floor(Math.min(0.5, Math.max(0, settings.radius)) * width),\r\n            center = isDark(row, col),\r\n            northwest = isDark(rowT, colL),\r\n            north = isDark(rowT, col),\r\n            northeast = isDark(rowT, colR),\r\n            east = isDark(row, colR),\r\n            southeast = isDark(rowB, colR),\r\n            south = isDark(rowB, col),\r\n            southwest = isDark(rowB, colL),\r\n            west = isDark(row, colL);\r\n\r\n        left = Math.round(left);\r\n        top = Math.round(top);\r\n        right = Math.round(right);\r\n        bottom = Math.round(bottom);\r\n\r\n        if (center) {\r\n            drawModuleRoundedDark(context, left, top, right, bottom, radius, !north && !west, !north && !east, !south && !east, !south && !west);\r\n        } else {\r\n            drawModuleRoundendLight(context, left, top, right, bottom, radius, north && west && northwest, north && east && northeast, south && east && southeast, south && west && southwest);\r\n        }\r\n    }\r\n\r\n    function drawModules(qr, context, settings) {\r\n        var moduleCount = qr.moduleCount,\r\n            moduleSize = settings.size / moduleCount,\r\n            row,\r\n            col;\r\n\r\n        context.beginPath();\r\n        for (row = 0; row < moduleCount; row += 1) {\r\n            for (col = 0; col < moduleCount; col += 1) {\r\n                var l = settings.left + col * moduleSize,\r\n                    t = settings.top + row * moduleSize,\r\n                    w = moduleSize;\r\n\r\n                drawModuleRounded(qr, context, settings, l, t, w, row, col);\r\n            }\r\n        }\r\n\r\n        setFill(context, settings);\r\n        context.fill();\r\n    }\r\n\r\n    function setFill(context, settings) {\r\n        const fill = settings.fill;\r\n        if (typeof fill === 'string') {\r\n            // solid color\r\n            context.fillStyle = fill;\r\n            return;\r\n        }\r\n        const type = fill['type'],\r\n            position = fill['position'],\r\n            colorStops = fill['colorStops'];\r\n        let gradient;\r\n        const absolutePosition = position.map(coordinate => Math.round(coordinate * settings.size));\r\n        if (type === 'linear-gradient') {\r\n            gradient = context.createLinearGradient.apply(context, absolutePosition);\r\n        } else if (type === 'radial-gradient') {\r\n            gradient = context.createRadialGradient.apply(context, absolutePosition);\r\n        } else {\r\n            throw new Error('Unsupported fill');\r\n        }\r\n        colorStops.forEach(([offset, color]) => {\r\n            gradient.addColorStop(offset, color);\r\n        });\r\n        context.fillStyle = gradient;\r\n    }\r\n\r\n    // Draws QR code to the given `canvas` and returns it.\r\n    function drawOnCanvas(canvas, settings) {\r\n        var qr = createMinQRCode(settings.text, settings.ecLevel, settings.minVersion, settings.maxVersion, settings.quiet);\r\n        if (!qr) {\r\n            return null;\r\n        }\r\n\r\n        var context = canvas.getContext('2d');\r\n\r\n        drawBackground(qr, context, settings);\r\n        drawModules(qr, context, settings);\r\n\r\n        return canvas;\r\n    }\r\n\r\n    // Returns a `canvas` element representing the QR code for the given settings.\r\n    function createCanvas(settings) {\r\n        var $canvas = document.createElement('canvas');\r\n        $canvas.width = settings.size;\r\n        $canvas.height = settings.size;\r\n        return drawOnCanvas($canvas, settings);\r\n    }\r\n\r\n    // Plugin\r\n    // ======\r\n\r\n    // Default settings\r\n    // ----------------\r\n    var defaults = {\r\n        // version range somewhere in 1 .. 40\r\n        'minVersion': 1,\r\n        'maxVersion': 40,\r\n\r\n        // error correction level: `'L'`, `'M'`, `'Q'` or `'H'`\r\n        'ecLevel': 'L',\r\n\r\n        // offset in pixel if drawn onto existing canvas\r\n        'left': 0,\r\n        'top': 0,\r\n\r\n        // size in pixel\r\n        'size': 200,\r\n\r\n        // code color or image element\r\n        'fill': '#000',\r\n\r\n        // background color, `null` for transparent background\r\n        'background': null,\r\n\r\n        // content\r\n        'text': 'no text',\r\n\r\n        // corner radius relative to module width: 0.0 .. 0.5\r\n        'radius': 0.5,\r\n\r\n        // quiet zone in modules\r\n        'quiet': 0,\r\n\r\n    };\r\n\r\n    // // Register the plugin\r\n    // // -------------------\r\n    qrCodeGenerator = function(options, $element) {\r\n        var settings = {};\r\n        Object.assign(settings, defaults, options);\r\n        // map real names to minifyable properties used by closure compiler\r\n        /* Joohansson edit\r\n        settings.minVersion = settings['minVersion'];\r\n        settings.maxVersion = settings['maxVersion'];\r\n        settings.ecLevel = settings['ecLevel'];\r\n        settings.left = settings['left'];\r\n        settings.top = settings['top'];\r\n        settings.size = settings['size'];\r\n        settings.fill = settings['fill'];\r\n        settings.background = settings['background'];\r\n        settings.text = settings['text'];\r\n        settings.radius = settings['radius'];\r\n        settings.quiet = settings['quiet'];\r\n        */\r\n\r\n        if ($element instanceof HTMLCanvasElement) {\r\n            if ($element.width !== settings.size || $element.height !== settings.size) {\r\n                $element.width = settings.size;\r\n                $element.height = settings.size;\r\n            }\r\n            $element.getContext('2d').clearRect(0, 0, $element.width, $element.height);\r\n            drawOnCanvas($element, settings);\r\n        } else {\r\n            const $canvas = createCanvas(settings);\r\n            $element.appendChild($canvas);\r\n        }\r\n    };\r\n}(function() {\r\n    // `qrcode` is the single public function defined by the `QR Code Generator`\r\n    //---------------------------------------------------------------------\r\n    //\r\n    // QR Code Generator for JavaScript\r\n    //\r\n    // Copyright (c) 2009 Kazuhiko Arase\r\n    //\r\n    // URL: http://www.d-project.com/\r\n    //\r\n    // Licensed under the MIT license:\r\n    //  http://www.opensource.org/licenses/mit-license.php\r\n    //\r\n    // The word 'QR Code' is registered trademark of\r\n    // DENSO WAVE INCORPORATED\r\n    //  http://www.denso-wave.com/qrcode/faqpatent-e.html\r\n    //\r\n    //---------------------------------------------------------------------\r\n\r\n    var qrcode = function() {\r\n\r\n        //---------------------------------------------------------------------\r\n        // qrcode\r\n        //---------------------------------------------------------------------\r\n\r\n        /**\r\n         * qrcode\r\n         * @param typeNumber 1 to 40\r\n         * @param errorCorrectLevel 'L','M','Q','H'\r\n         */\r\n        var qrcode = function(typeNumber, errorCorrectLevel) {\r\n\r\n            var PAD0 = 0xEC,\r\n                PAD1 = 0x11,\r\n                _typeNumber = typeNumber,\r\n                _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel],\r\n                _modules = null,\r\n                _moduleCount = 0,\r\n                _dataCache = null,\r\n                _dataList = [],\r\n                _this = {},\r\n                makeImpl = function(test, maskPattern) {\r\n\r\n                _moduleCount = _typeNumber * 4 + 17;\r\n                _modules = function(moduleCount) {\r\n                    var modules = new Array(moduleCount);\r\n                    for (var row = 0; row < moduleCount; row += 1) {\r\n                        modules[row] = new Array(moduleCount);\r\n                        for (var col = 0; col < moduleCount; col += 1) {\r\n                            modules[row][col] = null;\r\n                        }\r\n                    }\r\n                    return modules;\r\n                }(_moduleCount);\r\n\r\n                setupPositionProbePattern(0, 0);\r\n                setupPositionProbePattern(_moduleCount - 7, 0);\r\n                setupPositionProbePattern(0, _moduleCount - 7);\r\n                setupPositionAdjustPattern();\r\n                setupTimingPattern();\r\n                setupTypeInfo(test, maskPattern);\r\n\r\n                if (_typeNumber >= 7) {\r\n                    setupTypeNumber(test);\r\n                }\r\n\r\n                if (_dataCache == null) {\r\n                    _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList);\r\n                }\r\n\r\n                mapData(_dataCache, maskPattern);\r\n            },\r\n\r\n                setupPositionProbePattern = function(row, col) {\r\n\r\n                for (var r = -1; r <= 7; r += 1) {\r\n\r\n                    if (row + r <= -1 || _moduleCount <= row + r) continue;\r\n\r\n                    for (var c = -1; c <= 7; c += 1) {\r\n\r\n                        if (col + c <= -1 || _moduleCount <= col + c) continue;\r\n\r\n                        if ((0 <= r && r <= 6 && (c === 0 || c === 6)) ||\r\n                            (0 <= c && c <= 6 && (r === 0 || r === 6)) ||\r\n                            (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\r\n                            _modules[row + r][col + c] = true;\r\n                        } else {\r\n                            _modules[row + r][col + c] = false;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n                getBestMaskPattern = function() {\r\n\r\n                var minLostPoint = 0,\r\n                    pattern = 0;\r\n\r\n                for (var i = 0; i < 8; i += 1) {\r\n\r\n                    makeImpl(true, i);\r\n\r\n                    var lostPoint = QRUtil.getLostPoint(_this);\r\n\r\n                    if (i === 0 || minLostPoint > lostPoint) {\r\n                        minLostPoint = lostPoint;\r\n                        pattern = i;\r\n                    }\r\n                }\r\n\r\n                return pattern;\r\n            },\r\n\r\n                setupTimingPattern = function() {\r\n\r\n                for (var r = 8; r < _moduleCount - 8; r += 1) {\r\n                    if (_modules[r][6] != null) {\r\n                        continue;\r\n                    }\r\n                    _modules[r][6] = (r % 2 === 0);\r\n                }\r\n\r\n                for (var c = 8; c < _moduleCount - 8; c += 1) {\r\n                    if (_modules[6][c] != null) {\r\n                        continue;\r\n                    }\r\n                    _modules[6][c] = (c % 2 === 0);\r\n                }\r\n            },\r\n\r\n                setupPositionAdjustPattern = function() {\r\n\r\n                var pos = QRUtil.getPatternPosition(_typeNumber);\r\n\r\n                for (var i = 0; i < pos.length; i += 1) {\r\n\r\n                    for (var j = 0; j < pos.length; j += 1) {\r\n\r\n                        var row = pos[i];\r\n                        var col = pos[j];\r\n\r\n                        if (_modules[row][col] != null) {\r\n                            continue;\r\n                        }\r\n\r\n                        for (var r = -2; r <= 2; r += 1) {\r\n\r\n                            for (var c = -2; c <= 2; c += 1) {\r\n\r\n                                _modules[row + r][col + c] = r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            // TODO rm5 can be removed if we fix type to 5 (this method is called at 7 only)\r\n                setupTypeNumber = function(test) {\r\n\r\n                var bits = QRUtil.getBCHTypeNumber(_typeNumber);\r\n\r\n                for (var i = 0; i < 18; i += 1) {\r\n                    let mod = (!test && ((bits >> i) & 1) === 1);\r\n                    _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\r\n                }\r\n\r\n                for (var i2 = 0; i2 < 18; i2 += 1) {\r\n                    let mod = (!test && ((bits >> i2) & 1) === 1);\r\n                    _modules[i2 % 3 + _moduleCount - 8 - 3][Math.floor(i2 / 3)] = mod;\r\n                }\r\n            },\r\n\r\n                setupTypeInfo = function(test, maskPattern) {\r\n\r\n                var data = (_errorCorrectLevel << 3) | maskPattern;\r\n                var bits = QRUtil.getBCHTypeInfo(data);\r\n\r\n                for (var i = 0; i < 15; i += 1) {\r\n                    let mod = (!test && ((bits >> i) & 1) === 1);\r\n\r\n                    // vertical then horizontal\r\n                    _modules[i < 6 ? i : (i < 8 ? i + 1 : _moduleCount - 15 + i)][8] = mod;\r\n                    _modules[8][i < 8 ? _moduleCount - i - 1 : (i < 9 ? 15 - i : 14 - i)] = mod;\r\n                }\r\n\r\n                // fixed module\r\n                _modules[_moduleCount - 8][8] = (!test);\r\n            },\r\n\r\n                mapData = function(data, maskPattern) {\r\n\r\n                var inc = -1,\r\n                    row = _moduleCount - 1,\r\n                    bitIndex = 7,\r\n                    byteIndex = 0,\r\n                    maskFunc = QRUtil.getMaskFunction(maskPattern);\r\n\r\n                for (var col = _moduleCount - 1; col > 0; col -= 2) {\r\n\r\n                    if (col === 6) col -= 1;\r\n\r\n                    while (true) {\r\n\r\n                        for (var c = 0; c < 2; c += 1) {\r\n\r\n                            if (_modules[row][col - c] == null) {\r\n\r\n                                var dark = false;\r\n\r\n                                if (byteIndex < data.length) {\r\n                                    dark = (((data[byteIndex] >>> bitIndex) & 1) === 1);\r\n                                }\r\n\r\n                                var mask = maskFunc(row, col - c);\r\n\r\n                                if (mask) {\r\n                                    dark = !dark;\r\n                                }\r\n\r\n                                _modules[row][col - c] = dark;\r\n                                bitIndex -= 1;\r\n\r\n                                if (bitIndex === -1) {\r\n                                    byteIndex += 1;\r\n                                    bitIndex = 7;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        row += inc;\r\n\r\n                        if (row < 0 || _moduleCount <= row) {\r\n                            row -= inc;\r\n                            inc = -inc;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n                createBytes = function(buffer, rsBlocks) {\r\n\r\n                var offset = 0,\r\n                    maxDcCount = 0,\r\n                    maxEcCount = 0,\r\n                    dcdata = new Array(rsBlocks.length),\r\n                    ecdata = new Array(rsBlocks.length);\r\n\r\n                var i;\r\n                var r;\r\n                for (r = 0; r < rsBlocks.length; r += 1) {\r\n\r\n                    var dcCount = rsBlocks[r].dataCount,\r\n                        ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n                    maxDcCount = Math.max(maxDcCount, dcCount);\r\n                    maxEcCount = Math.max(maxEcCount, ecCount);\r\n\r\n                    dcdata[r] = new Array(dcCount);\r\n\r\n                    for (i = 0; i < dcdata[r].length; i += 1) {\r\n                        dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\r\n                    }\r\n                    offset += dcCount;\r\n\r\n                    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount),\r\n                        rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1),\r\n                        modPoly = rawPoly.mod(rsPoly);\r\n\r\n                    ecdata[r] = new Array(rsPoly.getLength() - 1);\r\n                    for (i = 0; i < ecdata[r].length; i += 1) {\r\n                        var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n                        ecdata[r][i] = (modIndex >= 0) ? modPoly.getAt(modIndex) : 0;\r\n                    }\r\n                }\r\n\r\n                var totalCodeCount = 0;\r\n\r\n                for (i = 0; i < rsBlocks.length; i += 1) {\r\n                    totalCodeCount += rsBlocks[i].totalCount;\r\n                }\r\n\r\n                var data = new Array(totalCodeCount);\r\n                var index = 0;\r\n\r\n                for (i = 0; i < maxDcCount; i += 1) {\r\n                    for (r = 0; r < rsBlocks.length; r += 1) {\r\n                        if (i < dcdata[r].length) {\r\n                            data[index] = dcdata[r][i];\r\n                            index += 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < maxEcCount; i += 1) {\r\n                    for (r = 0; r < rsBlocks.length; r += 1) {\r\n                        if (i < ecdata[r].length) {\r\n                            data[index] = ecdata[r][i];\r\n                            index += 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return data;\r\n            },\r\n\r\n                createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n\r\n                var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel),\r\n                    buffer = qrBitBuffer();\r\n\r\n                var i;\r\n                for (i = 0; i < dataList.length; i += 1) {\r\n                    var data = dataList[i];\r\n                    buffer.put(data.getMode(), 4);\r\n                    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber));\r\n                    data.write(buffer);\r\n                }\r\n\r\n                // calc num max data.\r\n                var totalDataCount = 0;\r\n                for (i = 0; i < rsBlocks.length; i += 1) {\r\n                    totalDataCount += rsBlocks[i].dataCount;\r\n                }\r\n\r\n                if (buffer.getLengthInBits() > totalDataCount * 8) {\r\n                    throw new Error('code length overflow. (' +\r\n                        buffer.getLengthInBits() +\r\n                        '>' +\r\n                        totalDataCount * 8 +\r\n                        ')');\r\n                }\r\n\r\n                // end code\r\n                if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n                    buffer.put(0, 4);\r\n                }\r\n\r\n                // padding\r\n                while (buffer.getLengthInBits() % 8 !== 0) {\r\n                    buffer.putBit(false);\r\n                }\r\n\r\n                // padding\r\n                while (true) {\r\n\r\n                    if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n                        break;\r\n                    }\r\n                    buffer.put(PAD0, 8);\r\n\r\n                    if (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n                        break;\r\n                    }\r\n                    buffer.put(PAD1, 8);\r\n                }\r\n\r\n                return createBytes(buffer, rsBlocks);\r\n            };\r\n\r\n            _this.addData = function(data) {\r\n                var newData = qr8BitByte(data);\r\n                _dataList.push(newData);\r\n                _dataCache = null;\r\n            };\r\n\r\n            _this.isDark = function(row, col) {\r\n                if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\r\n                    throw new Error(row + ',' + col);\r\n                }\r\n                return _modules[row][col];\r\n            };\r\n\r\n            _this.getModuleCount = function() {\r\n                return _moduleCount;\r\n            };\r\n\r\n            _this.make = function() {\r\n                makeImpl(false, getBestMaskPattern());\r\n            };\r\n\r\n            return _this;\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // qrcode.stringToBytes\r\n        //---------------------------------------------------------------------\r\n\r\n        // UTF-8 version\r\n        qrcode.stringToBytes = function(s) {\r\n            // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\r\n            function toUTF8Array(str) {\r\n                var utf8 = [];\r\n                for (var i = 0; i < str.length; i++) {\r\n                    var charcode = str.charCodeAt(i);\r\n                    if (charcode < 0x80) utf8.push(charcode);\r\n                    else if (charcode < 0x800) {\r\n                        utf8.push(0xc0 | (charcode >> 6),\r\n                            0x80 | (charcode & 0x3f));\r\n                    } else if (charcode < 0xd800 || charcode >= 0xe000) {\r\n                        utf8.push(0xe0 | (charcode >> 12),\r\n                            0x80 | ((charcode >> 6) & 0x3f),\r\n                            0x80 | (charcode & 0x3f));\r\n                    }\r\n                    // surrogate pair\r\n                    else {\r\n                        i++;\r\n                        // UTF-16 encodes 0x10000-0x10FFFF by\r\n                        // subtracting 0x10000 and splitting the\r\n                        // 20 bits of 0x0-0xFFFFF into two halves\r\n                        charcode = 0x10000 + (((charcode & 0x3ff) << 10) |\r\n                            (str.charCodeAt(i) & 0x3ff));\r\n                        utf8.push(0xf0 | (charcode >> 18),\r\n                            0x80 | ((charcode >> 12) & 0x3f),\r\n                            0x80 | ((charcode >> 6) & 0x3f),\r\n                            0x80 | (charcode & 0x3f));\r\n                    }\r\n                }\r\n                return utf8;\r\n            }\r\n            return toUTF8Array(s);\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // QRMode\r\n        //---------------------------------------------------------------------\r\n\r\n        var QRMode = {\r\n            MODE_8BIT_BYTE: 1 << 2,\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // QRErrorCorrectLevel\r\n        //---------------------------------------------------------------------\r\n\r\n        var QRErrorCorrectLevel = {\r\n            'L': 1,\r\n            'M': 0,\r\n            'Q': 3,\r\n            'H': 2\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // QRMaskPattern\r\n        //---------------------------------------------------------------------\r\n\r\n        var QRMaskPattern = {\r\n            PATTERN000: 0,\r\n            PATTERN001: 1,\r\n            PATTERN010: 2,\r\n            PATTERN011: 3,\r\n            PATTERN100: 4,\r\n            PATTERN101: 5,\r\n            PATTERN110: 6,\r\n            PATTERN111: 7\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // QRUtil\r\n        //---------------------------------------------------------------------\r\n\r\n        var QRUtil = function() {\r\n\r\n            var PATTERN_POSITION_TABLE = [\r\n                [],\r\n                [6, 18],\r\n                [6, 22],\r\n                [6, 26],\r\n                [6, 30],\r\n                [6, 34],\r\n                [6, 22, 38],\r\n                [6, 24, 42],\r\n                [6, 26, 46],\r\n                [6, 28, 50],\r\n                [6, 30, 54],\r\n                [6, 32, 58],\r\n                [6, 34, 62],\r\n                [6, 26, 46, 66],\r\n                [6, 26, 48, 70],\r\n                [6, 26, 50, 74],\r\n                [6, 30, 54, 78],\r\n                [6, 30, 56, 82],\r\n                [6, 30, 58, 86],\r\n                [6, 34, 62, 90],\r\n                [6, 28, 50, 72, 94],\r\n                [6, 26, 50, 74, 98],\r\n                [6, 30, 54, 78, 102],\r\n                [6, 28, 54, 80, 106],\r\n                [6, 32, 58, 84, 110],\r\n                [6, 30, 58, 86, 114],\r\n                [6, 34, 62, 90, 118],\r\n                [6, 26, 50, 74, 98, 122],\r\n                [6, 30, 54, 78, 102, 126],\r\n                [6, 26, 52, 78, 104, 130],\r\n                [6, 30, 56, 82, 108, 134],\r\n                [6, 34, 60, 86, 112, 138],\r\n                [6, 30, 58, 86, 114, 142],\r\n                [6, 34, 62, 90, 118, 146],\r\n                [6, 30, 54, 78, 102, 126, 150],\r\n                [6, 24, 50, 76, 102, 128, 154],\r\n                [6, 28, 54, 80, 106, 132, 158],\r\n                [6, 32, 58, 84, 110, 136, 162],\r\n                [6, 26, 54, 82, 110, 138, 166],\r\n                [6, 30, 58, 86, 114, 142, 170]\r\n            ],\r\n                G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\r\n                G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\r\n                G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\r\n\r\n                _this = {},\r\n\r\n                getBCHDigit = function(data) {\r\n                var digit = 0;\r\n                while (data !== 0) {\r\n                    digit += 1;\r\n                    data >>>= 1;\r\n                }\r\n                return digit;\r\n            };\r\n\r\n            _this.getBCHTypeInfo = function(data) {\r\n                var d = data << 10;\r\n                while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\r\n                    d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15)));\r\n                }\r\n                return ((data << 10) | d) ^ G15_MASK;\r\n            };\r\n\r\n            // TODO rm5 (see rm5 above)\r\n            _this.getBCHTypeNumber = function(data) {\r\n                var d = data << 12;\r\n                while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\r\n                    d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18)));\r\n                }\r\n                return (data << 12) | d;\r\n            };\r\n\r\n            _this.getPatternPosition = function(typeNumber) {\r\n                return PATTERN_POSITION_TABLE[typeNumber - 1];\r\n            };\r\n\r\n            _this.getMaskFunction = function(maskPattern) {\r\n\r\n                switch (maskPattern) {\r\n\r\n                    case QRMaskPattern.PATTERN000:\r\n                        return function(i, j) { return (i + j) % 2 === 0; };\r\n                    case QRMaskPattern.PATTERN001:\r\n                        return function(i, j) { return i % 2 === 0; };\r\n                    case QRMaskPattern.PATTERN010:\r\n                        return function(i, j) { return j % 3 === 0; };\r\n                    case QRMaskPattern.PATTERN011:\r\n                        return function(i, j) { return (i + j) % 3 === 0; };\r\n                    case QRMaskPattern.PATTERN100:\r\n                        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0; };\r\n                    case QRMaskPattern.PATTERN101:\r\n                        return function(i, j) { return (i * j) % 2 + (i * j) % 3 === 0; };\r\n                    case QRMaskPattern.PATTERN110:\r\n                        return function(i, j) { return ((i * j) % 2 + (i * j) % 3) % 2 === 0; };\r\n                    case QRMaskPattern.PATTERN111:\r\n                        return function(i, j) { return ((i * j) % 3 + (i + j) % 2) % 2 === 0; };\r\n\r\n                    default:\r\n                        throw new Error('bad maskPattern:' + maskPattern);\r\n                }\r\n            };\r\n\r\n            _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\r\n                var a = qrPolynomial([1], 0);\r\n                for (var i = 0; i < errorCorrectLength; i += 1) {\r\n                    a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0));\r\n                }\r\n                return a;\r\n            };\r\n\r\n            _this.getLengthInBits = function(mode, type) {\r\n                if (mode !== QRMode.MODE_8BIT_BYTE || type < 1 || type > 40)\r\n                    throw new Error('mode: ' + mode + '; type: ' + type);\r\n\r\n                return type < 10 ? 8 : 16;\r\n            };\r\n\r\n            _this.getLostPoint = function(qrcode) {\r\n\r\n                var moduleCount = qrcode.getModuleCount(),\r\n                    lostPoint = 0;\r\n\r\n                // LEVEL1\r\n\r\n                var row;\r\n                var col;\r\n                for (row = 0; row < moduleCount; row += 1) {\r\n                    for (col = 0; col < moduleCount; col += 1) {\r\n\r\n                        var sameCount = 0,\r\n                            dark = qrcode.isDark(row, col);\r\n\r\n                        for (var r = -1; r <= 1; r += 1) {\r\n\r\n                            if (row + r < 0 || moduleCount <= row + r) {\r\n                                continue;\r\n                            }\r\n\r\n                            for (var c = -1; c <= 1; c += 1) {\r\n\r\n                                if (col + c < 0 || moduleCount <= col + c) {\r\n                                    continue;\r\n                                }\r\n\r\n                                if (r === 0 && c === 0) {\r\n                                    continue;\r\n                                }\r\n\r\n                                if (dark === qrcode.isDark(row + r, col + c)) {\r\n                                    sameCount += 1;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (sameCount > 5) {\r\n                            lostPoint += (3 + sameCount - 5);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // LEVEL2\r\n\r\n                for (row = 0; row < moduleCount - 1; row += 1) {\r\n                    for (col = 0; col < moduleCount - 1; col += 1) {\r\n                        var count = 0;\r\n                        if (qrcode.isDark(row, col)) count += 1;\r\n                        if (qrcode.isDark(row + 1, col)) count += 1;\r\n                        if (qrcode.isDark(row, col + 1)) count += 1;\r\n                        if (qrcode.isDark(row + 1, col + 1)) count += 1;\r\n                        if (count === 0 || count === 4) {\r\n                            lostPoint += 3;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // LEVEL3\r\n\r\n                for (row = 0; row < moduleCount; row += 1) {\r\n                    for (col = 0; col < moduleCount - 6; col += 1) {\r\n                        if (qrcode.isDark(row, col) &&\r\n                            !qrcode.isDark(row, col + 1) &&\r\n                            qrcode.isDark(row, col + 2) &&\r\n                            qrcode.isDark(row, col + 3) &&\r\n                            qrcode.isDark(row, col + 4) &&\r\n                            !qrcode.isDark(row, col + 5) &&\r\n                            qrcode.isDark(row, col + 6)) {\r\n                            lostPoint += 40;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (col = 0; col < moduleCount; col += 1) {\r\n                    for (row = 0; row < moduleCount - 6; row += 1) {\r\n                        if (qrcode.isDark(row, col) &&\r\n                            !qrcode.isDark(row + 1, col) &&\r\n                            qrcode.isDark(row + 2, col) &&\r\n                            qrcode.isDark(row + 3, col) &&\r\n                            qrcode.isDark(row + 4, col) &&\r\n                            !qrcode.isDark(row + 5, col) &&\r\n                            qrcode.isDark(row + 6, col)) {\r\n                            lostPoint += 40;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // LEVEL4\r\n\r\n                var darkCount = 0;\r\n\r\n                for (col = 0; col < moduleCount; col += 1) {\r\n                    for (row = 0; row < moduleCount; row += 1) {\r\n                        if (qrcode.isDark(row, col)) {\r\n                            darkCount += 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\r\n                lostPoint += ratio * 10;\r\n\r\n                return lostPoint;\r\n            };\r\n\r\n            return _this;\r\n        }();\r\n\r\n        //---------------------------------------------------------------------\r\n        // QRMath\r\n        //---------------------------------------------------------------------\r\n\r\n        var QRMath = function() {\r\n\r\n            var EXP_TABLE = new Array(256),\r\n                LOG_TABLE = new Array(256);\r\n\r\n            // initialize tables\r\n            var i;\r\n            for (i = 0; i < 8; i += 1) {\r\n                EXP_TABLE[i] = 1 << i;\r\n            }\r\n            for (i = 8; i < 256; i += 1) {\r\n                EXP_TABLE[i] = EXP_TABLE[i - 4] ^\r\n                    EXP_TABLE[i - 5] ^\r\n                    EXP_TABLE[i - 6] ^\r\n                    EXP_TABLE[i - 8];\r\n            }\r\n            for (i = 0; i < 255; i += 1) {\r\n                LOG_TABLE[EXP_TABLE[i]] = i;\r\n            }\r\n\r\n            var _this = {};\r\n\r\n            _this.glog = function(n) {\r\n\r\n                if (n < 1) {\r\n                    throw new Error('glog(' + n + ')');\r\n                }\r\n\r\n                return LOG_TABLE[n];\r\n            };\r\n\r\n            _this.gexp = function(n) {\r\n\r\n                while (n < 0) {\r\n                    n += 255;\r\n                }\r\n\r\n                while (n >= 256) {\r\n                    n -= 255;\r\n                }\r\n\r\n                return EXP_TABLE[n];\r\n            };\r\n\r\n            return _this;\r\n        }();\r\n\r\n        //---------------------------------------------------------------------\r\n        // qrPolynomial\r\n        //---------------------------------------------------------------------\r\n\r\n        function qrPolynomial(num, shift) {\r\n\r\n            if (typeof num.length === 'undefined') {\r\n                throw new Error(num.length + '/' + shift);\r\n            }\r\n\r\n            var _num = function() {\r\n                var offset = 0;\r\n                while (offset < num.length && num[offset] === 0) {\r\n                    offset += 1;\r\n                }\r\n                var _num = new Array(num.length - offset + shift);\r\n                for (var i = 0; i < num.length - offset; i += 1) {\r\n                    _num[i] = num[i + offset];\r\n                }\r\n                return _num;\r\n            }();\r\n\r\n            var _this = {};\r\n\r\n            _this.getAt = function(index) {\r\n                return _num[index];\r\n            };\r\n\r\n            _this.getLength = function() {\r\n                return _num.length;\r\n            };\r\n\r\n            _this.multiply = function(e) {\r\n\r\n                var num = new Array(_this.getLength() + e.getLength() - 1);\r\n\r\n                for (var i = 0; i < _this.getLength(); i += 1) {\r\n                    for (var j = 0; j < e.getLength(); j += 1) {\r\n                        num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j)));\r\n                    }\r\n                }\r\n\r\n                return qrPolynomial(num, 0);\r\n            };\r\n\r\n            _this.mod = function(e) {\r\n\r\n                if (_this.getLength() - e.getLength() < 0) {\r\n                    return _this;\r\n                }\r\n\r\n                var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0));\r\n\r\n                var num = new Array(_this.getLength());\r\n                var i;\r\n                for (i = 0; i < _this.getLength(); i += 1) {\r\n                    num[i] = _this.getAt(i);\r\n                }\r\n\r\n                for (i = 0; i < e.getLength(); i += 1) {\r\n                    num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio);\r\n                }\r\n\r\n                // recursive call\r\n                return qrPolynomial(num, 0).mod(e);\r\n            };\r\n\r\n            return _this;\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // QRRSBlock\r\n        //---------------------------------------------------------------------\r\n\r\n        var QRRSBlock = function() {\r\n\r\n            // TODO is it possible to generate this block with JS in let kB?\r\n            var RS_BLOCK_TABLE = [\r\n\r\n                // L\r\n                // M\r\n                // Q\r\n                // H\r\n\r\n                // 1\r\n                [1, 26, 19],\r\n                [1, 26, 16],\r\n                [1, 26, 13],\r\n                [1, 26, 9],\r\n\r\n                // 2\r\n                [1, 44, 34],\r\n                [1, 44, 28],\r\n                [1, 44, 22],\r\n                [1, 44, 16],\r\n\r\n                // 3\r\n                [1, 70, 55],\r\n                [1, 70, 44],\r\n                [2, 35, 17],\r\n                [2, 35, 13],\r\n\r\n                // 4\r\n                [1, 100, 80],\r\n                [2, 50, 32],\r\n                [2, 50, 24],\r\n                [4, 25, 9],\r\n\r\n                // 5\r\n                [1, 134, 108],\r\n                [2, 67, 43],\r\n                [2, 33, 15, 2, 34, 16],\r\n                [2, 33, 11, 2, 34, 12],\r\n\r\n                // 6\r\n                [2, 86, 68],\r\n                [4, 43, 27],\r\n                [4, 43, 19],\r\n                [4, 43, 15],\r\n\r\n                // 7\r\n                [2, 98, 78],\r\n                [4, 49, 31],\r\n                [2, 32, 14, 4, 33, 15],\r\n                [4, 39, 13, 1, 40, 14],\r\n\r\n                // 8\r\n                [2, 121, 97],\r\n                [2, 60, 38, 2, 61, 39],\r\n                [4, 40, 18, 2, 41, 19],\r\n                [4, 40, 14, 2, 41, 15],\r\n\r\n                // 9\r\n                [2, 146, 116],\r\n                [3, 58, 36, 2, 59, 37],\r\n                [4, 36, 16, 4, 37, 17],\r\n                [4, 36, 12, 4, 37, 13],\r\n\r\n                // 10\r\n                [2, 86, 68, 2, 87, 69],\r\n                [4, 69, 43, 1, 70, 44],\r\n                [6, 43, 19, 2, 44, 20],\r\n                [6, 43, 15, 2, 44, 16],\r\n\r\n                // 11\r\n                [4, 101, 81],\r\n                [1, 80, 50, 4, 81, 51],\r\n                [4, 50, 22, 4, 51, 23],\r\n                [3, 36, 12, 8, 37, 13],\r\n\r\n                // 12\r\n                [2, 116, 92, 2, 117, 93],\r\n                [6, 58, 36, 2, 59, 37],\r\n                [4, 46, 20, 6, 47, 21],\r\n                [7, 42, 14, 4, 43, 15],\r\n\r\n                // 13\r\n                [4, 133, 107],\r\n                [8, 59, 37, 1, 60, 38],\r\n                [8, 44, 20, 4, 45, 21],\r\n                [12, 33, 11, 4, 34, 12],\r\n\r\n                // 14\r\n                [3, 145, 115, 1, 146, 116],\r\n                [4, 64, 40, 5, 65, 41],\r\n                [11, 36, 16, 5, 37, 17],\r\n                [11, 36, 12, 5, 37, 13],\r\n\r\n                // 15\r\n                [5, 109, 87, 1, 110, 88],\r\n                [5, 65, 41, 5, 66, 42],\r\n                [5, 54, 24, 7, 55, 25],\r\n                [11, 36, 12, 7, 37, 13],\r\n\r\n                // 16\r\n                [5, 122, 98, 1, 123, 99],\r\n                [7, 73, 45, 3, 74, 46],\r\n                [15, 43, 19, 2, 44, 20],\r\n                [3, 45, 15, 13, 46, 16],\r\n\r\n                // 17\r\n                [1, 135, 107, 5, 136, 108],\r\n                [10, 74, 46, 1, 75, 47],\r\n                [1, 50, 22, 15, 51, 23],\r\n                [2, 42, 14, 17, 43, 15],\r\n\r\n                // 18\r\n                [5, 150, 120, 1, 151, 121],\r\n                [9, 69, 43, 4, 70, 44],\r\n                [17, 50, 22, 1, 51, 23],\r\n                [2, 42, 14, 19, 43, 15],\r\n\r\n                // 19\r\n                [3, 141, 113, 4, 142, 114],\r\n                [3, 70, 44, 11, 71, 45],\r\n                [17, 47, 21, 4, 48, 22],\r\n                [9, 39, 13, 16, 40, 14],\r\n\r\n                // 20\r\n                [3, 135, 107, 5, 136, 108],\r\n                [3, 67, 41, 13, 68, 42],\r\n                [15, 54, 24, 5, 55, 25],\r\n                [15, 43, 15, 10, 44, 16],\r\n\r\n                // 21\r\n                [4, 144, 116, 4, 145, 117],\r\n                [17, 68, 42],\r\n                [17, 50, 22, 6, 51, 23],\r\n                [19, 46, 16, 6, 47, 17],\r\n\r\n                // 22\r\n                [2, 139, 111, 7, 140, 112],\r\n                [17, 74, 46],\r\n                [7, 54, 24, 16, 55, 25],\r\n                [34, 37, 13],\r\n\r\n                // 23\r\n                [4, 151, 121, 5, 152, 122],\r\n                [4, 75, 47, 14, 76, 48],\r\n                [11, 54, 24, 14, 55, 25],\r\n                [16, 45, 15, 14, 46, 16],\r\n\r\n                // 24\r\n                [6, 147, 117, 4, 148, 118],\r\n                [6, 73, 45, 14, 74, 46],\r\n                [11, 54, 24, 16, 55, 25],\r\n                [30, 46, 16, 2, 47, 17],\r\n\r\n                // 25\r\n                [8, 132, 106, 4, 133, 107],\r\n                [8, 75, 47, 13, 76, 48],\r\n                [7, 54, 24, 22, 55, 25],\r\n                [22, 45, 15, 13, 46, 16],\r\n\r\n                // 26\r\n                [10, 142, 114, 2, 143, 115],\r\n                [19, 74, 46, 4, 75, 47],\r\n                [28, 50, 22, 6, 51, 23],\r\n                [33, 46, 16, 4, 47, 17],\r\n\r\n                // 27\r\n                [8, 152, 122, 4, 153, 123],\r\n                [22, 73, 45, 3, 74, 46],\r\n                [8, 53, 23, 26, 54, 24],\r\n                [12, 45, 15, 28, 46, 16],\r\n\r\n                // 28\r\n                [3, 147, 117, 10, 148, 118],\r\n                [3, 73, 45, 23, 74, 46],\r\n                [4, 54, 24, 31, 55, 25],\r\n                [11, 45, 15, 31, 46, 16],\r\n\r\n                // 29\r\n                [7, 146, 116, 7, 147, 117],\r\n                [21, 73, 45, 7, 74, 46],\r\n                [1, 53, 23, 37, 54, 24],\r\n                [19, 45, 15, 26, 46, 16],\r\n\r\n                // 30\r\n                [5, 145, 115, 10, 146, 116],\r\n                [19, 75, 47, 10, 76, 48],\r\n                [15, 54, 24, 25, 55, 25],\r\n                [23, 45, 15, 25, 46, 16],\r\n\r\n                // 31\r\n                [13, 145, 115, 3, 146, 116],\r\n                [2, 74, 46, 29, 75, 47],\r\n                [42, 54, 24, 1, 55, 25],\r\n                [23, 45, 15, 28, 46, 16],\r\n\r\n                // 32\r\n                [17, 145, 115],\r\n                [10, 74, 46, 23, 75, 47],\r\n                [10, 54, 24, 35, 55, 25],\r\n                [19, 45, 15, 35, 46, 16],\r\n\r\n                // 33\r\n                [17, 145, 115, 1, 146, 116],\r\n                [14, 74, 46, 21, 75, 47],\r\n                [29, 54, 24, 19, 55, 25],\r\n                [11, 45, 15, 46, 46, 16],\r\n\r\n                // 34\r\n                [13, 145, 115, 6, 146, 116],\r\n                [14, 74, 46, 23, 75, 47],\r\n                [44, 54, 24, 7, 55, 25],\r\n                [59, 46, 16, 1, 47, 17],\r\n\r\n                // 35\r\n                [12, 151, 121, 7, 152, 122],\r\n                [12, 75, 47, 26, 76, 48],\r\n                [39, 54, 24, 14, 55, 25],\r\n                [22, 45, 15, 41, 46, 16],\r\n\r\n                // 36\r\n                [6, 151, 121, 14, 152, 122],\r\n                [6, 75, 47, 34, 76, 48],\r\n                [46, 54, 24, 10, 55, 25],\r\n                [2, 45, 15, 64, 46, 16],\r\n\r\n                // 37\r\n                [17, 152, 122, 4, 153, 123],\r\n                [29, 74, 46, 14, 75, 47],\r\n                [49, 54, 24, 10, 55, 25],\r\n                [24, 45, 15, 46, 46, 16],\r\n\r\n                // 38\r\n                [4, 152, 122, 18, 153, 123],\r\n                [13, 74, 46, 32, 75, 47],\r\n                [48, 54, 24, 14, 55, 25],\r\n                [42, 45, 15, 32, 46, 16],\r\n\r\n                // 39\r\n                [20, 147, 117, 4, 148, 118],\r\n                [40, 75, 47, 7, 76, 48],\r\n                [43, 54, 24, 22, 55, 25],\r\n                [10, 45, 15, 67, 46, 16],\r\n\r\n                // 40\r\n                [19, 148, 118, 6, 149, 119],\r\n                [18, 75, 47, 31, 76, 48],\r\n                [34, 54, 24, 34, 55, 25],\r\n                [20, 45, 15, 61, 46, 16]\r\n            ];\r\n\r\n            var qrRSBlock = function(totalCount, dataCount) {\r\n                var _this = {};\r\n                _this.totalCount = totalCount;\r\n                _this.dataCount = dataCount;\r\n                return _this;\r\n            };\r\n\r\n            var _this = {};\r\n\r\n            var getRsBlockTable = function(typeNumber, errorCorrectLevel) {\r\n                switch (errorCorrectLevel) {\r\n                    case QRErrorCorrectLevel['L']:\r\n                        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\r\n                    case QRErrorCorrectLevel['M']:\r\n                        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\r\n                    case QRErrorCorrectLevel['Q']:\r\n                        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\r\n                    case QRErrorCorrectLevel['H']:\r\n                        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\r\n                    default:\r\n                        return undefined;\r\n                }\r\n            };\r\n\r\n            _this.getRSBlocks = function(typeNumber, errorCorrectLevel) {\r\n\r\n                var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);\r\n\r\n                if (typeof rsBlock === 'undefined') {\r\n                    throw new Error('bad rs block @ typeNumber:' + typeNumber +\r\n                        '/errorCorrectLevel:' + errorCorrectLevel);\r\n                }\r\n\r\n                var length = rsBlock.length / 3,\r\n                    list = [];\r\n\r\n                for (var i = 0; i < length; i += 1) {\r\n\r\n                    var count = rsBlock[i * 3 + 0],\r\n                        totalCount = rsBlock[i * 3 + 1],\r\n                        dataCount = rsBlock[i * 3 + 2];\r\n\r\n                    for (var j = 0; j < count; j += 1) {\r\n                        list.push(qrRSBlock(totalCount, dataCount));\r\n                    }\r\n                }\r\n\r\n                return list;\r\n            };\r\n\r\n            return _this;\r\n        }();\r\n\r\n        //---------------------------------------------------------------------\r\n        // qrBitBuffer\r\n        //---------------------------------------------------------------------\r\n\r\n        var qrBitBuffer = function() {\r\n\r\n            var _buffer = [],\r\n                _length = 0,\r\n                _this = {};\r\n\r\n            _this.getBuffer = function() {\r\n                return _buffer;\r\n            };\r\n\r\n            _this.getAt = function(index) {\r\n                var bufIndex = Math.floor(index / 8);\r\n                return ((_buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1;\r\n            };\r\n\r\n            _this.put = function(num, length) {\r\n                for (var i = 0; i < length; i += 1) {\r\n                    _this.putBit(((num >>> (length - i - 1)) & 1) === 1);\r\n                }\r\n            };\r\n\r\n            _this.getLengthInBits = function() {\r\n                return _length;\r\n            };\r\n\r\n            _this.putBit = function(bit) {\r\n\r\n                var bufIndex = Math.floor(_length / 8);\r\n                if (_buffer.length <= bufIndex) {\r\n                    _buffer.push(0);\r\n                }\r\n\r\n                if (bit) {\r\n                    _buffer[bufIndex] |= (0x80 >>> (_length % 8));\r\n                }\r\n\r\n                _length += 1;\r\n            };\r\n\r\n            return _this;\r\n        };\r\n\r\n        //---------------------------------------------------------------------\r\n        // qr8BitByte\r\n        //---------------------------------------------------------------------\r\n\r\n        var qr8BitByte = function(data) {\r\n\r\n            var _mode = QRMode.MODE_8BIT_BYTE,\r\n                _data = data,\r\n                _bytes = qrcode.stringToBytes(_data),\r\n                _this = {};\r\n\r\n            _this.getMode = function() {\r\n                return _mode;\r\n            };\r\n\r\n            _this.getLength = function(buffer) {\r\n                return _bytes.length;\r\n            };\r\n\r\n            _this.write = function(buffer) {\r\n                for (var i = 0; i < _bytes.length; i += 1) {\r\n                    buffer.put(_bytes[i], 8);\r\n                }\r\n            };\r\n\r\n            return _this;\r\n        };\r\n\r\n        // returns qrcode function.\r\n        return qrcode;\r\n    }();\r\n\r\n    return qrcode; // eslint-disable-line no-undef\r\n}()));\r\n","import React from 'react';\r\nimport QrCode from './qr-code.js';\r\n\r\nexport default class QrImageStyle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        image: null,\r\n        prevContent: this.props.qrContent\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.content !== state.prevContent) {\r\n      const qr = document.createElement('canvas');\r\n      QrCode.render({\r\n        text: props.content,\r\n        radius: 0.5, // 0.0 to 0.5\r\n        ecLevel: 'Q', // L, M, Q, H\r\n        fill: {\r\n          type: 'radial-gradient', // or 'linear-gradient'\r\n          position: [ 0.5,0.5,0, 0.5,0.5,0.75 ], //xPos,yPos,radius of inner and outer circle where position is 0-1 of full dimension\r\n          colorStops: [\r\n              [ 0, '#376ab4' ], //from 0 to 100% (0-1)\r\n              [ 1, '#000034' ],\r\n          ]\r\n        }, // foreground color\r\n        background: null, // color or null for transparent\r\n        size: props.size // in pixels\r\n      }, qr);\r\n\r\n      return {\r\n        prevContent: props.content,\r\n        image: qr.toDataURL('image/png')\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return <img { ...this.props }src={this.state.image} alt=\"QR\"/>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport * as rpc from './rpc' //rpc creds not shared on github\r\nimport { Base64 } from 'js-base64';\r\nimport { Dropdown, DropdownButton, InputGroup, FormControl, Button} from 'react-bootstrap'\r\nimport QrImageStyle from './components/qrImageStyle'\r\nimport Parser from 'html-react-parser'\r\nimport * as Nano from 'nanocurrency'\r\nimport $ from 'jquery'\r\n\r\nconst RPC_TIMEOUT = 10000 // 10sec timeout for calling RPC proxy\r\n\r\n//CONSTANTS\r\nexport const constants = {\r\n  // These are taken from the creds file\r\n  RPC_SERVER: rpc.RPC_SERVER,\r\n  RPC_CREDS: rpc.RPC_CREDS,\r\n\r\n  // Nano sample commands\r\n  SAMPLE_COMMANDS: [\r\n    '{\"action\":\"account_history\", \"account\":\"nano_3cpz7oh9qr5b7obbcb5867omqf8esix4sdd5w6mh8kkknamjgbnwrimxsaaf\",\"count\":\"20\"}',\r\n    '{\"action\":\"account_info\",\"account\":\"nano_3t6k35gi95xu6tergt6p69ck76ogmitsa8mnijtpxm9fkcm736xtoncuohr3\"}',\r\n    '{\"action\":\"account_balance\",\"account\":\"nano_3t6k35gi95xu6tergt6p69ck76ogmitsa8mnijtpxm9fkcm736xtoncuohr3\"}',\r\n    '{\"action\":\"account_key\",\"account\":\"nano_1e5aqegc1jb7qe964u4adzmcezyo6o146zb8hm6dft8tkp79za3sxwjym5rx\"}',\r\n    '{\"action\":\"account_representative\",\"account\":\"nano_3t6k35gi95xu6tergt6p69ck76ogmitsa8mnijtpxm9fkcm736xtoncuohr3\"}',\r\n    '{\"action\":\"account_weight\",\"account\":\"nano_1iuz18n4g4wfp9gf7p1s8qkygxw7wx9qfjq6a9aq68uyrdnningdcjontgar\"}',\r\n    '{\"action\":\"active_difficulty\"}',\r\n    '{\"action\":\"available_supply\"}',\r\n    '{\"action\":\"block_info\",\"json_block\":\"true\",\"hash\":\"87434F8041869A01C8F6F263B87972D7BA443A72E0A97D7A3FD0CCC2358FD6F9\"}',\r\n    '{\"action\":\"block_account\",\"hash\":\"F94A33B1CDC646A5A1F51AB576590EBD1A65171FFC31EF5C608B71C94BA24695\"}',\r\n    '{\"action\":\"block_count\"}',\r\n    '{\"action\":\"chain\",\"block\":\"87434F8041869A01C8F6F263B87972D7BA443A72E0A97D7A3FD0CCC2358FD6F9\",\"count\":\"20\"}',\r\n    '{\"action\":\"confirmation_quorum\"}',\r\n    '{\"action\":\"delegators\",\"account\":\"nano_3t6k35gi95xu6tergt6p69ck76ogmitsa8mnijtpxm9fkcm736xtoncuohr3\"}',\r\n    '{\"action\":\"delegators_count\",\"account\":\"nano_3t6k35gi95xu6tergt6p69ck76ogmitsa8mnijtpxm9fkcm736xtoncuohr3\"}',\r\n    '{\"action\":\"frontiers\", \"account\":\"nano_3cpz7oh9qr5b7obbcb5867omqf8esix4sdd5w6mh8kkknamjgbnwrimxsaaf\",\"count\":\"20\"}',\r\n    '{\"action\":\"key_create\"}',\r\n    '{\"action\":\"pending\",\"account\":\"nano_1111111111111111111111111111111111111111111111111117353trpda\",\"count\":\"5\"}',\r\n    '{\"action\":\"pending_exists\",\"hash\":\"4563ADCE3495BF1EA6F3B7A84E94AC866039F57706C2A28FAE27EE3F1767FD7D\"}',\r\n    '{\"action\": \"process\",\"json_block\": \"true\",\"subtype\": \"send\",\"block\": {\"type\": \"state\",\"account\": \"nano_1qato4k7z3spc8gq1zyd8xeqfbzsoxwo36a45ozbrxcatut7up8ohyardu1z\",\"previous\": \"6CDDA48608C7843A0AC1122BDD46D9E20E21190986B19EAC23E7F33F2E6A6766\",\"representative\": \"nano_3pczxuorp48td8645bs3m6c3xotxd3idskrenmi65rbrga5zmkemzhwkaznh\",\"balance\": \"40200000001000000000000000000000000\",\"link\": \"87434F8041869A01C8F6F263B87972D7BA443A72E0A97D7A3FD0CCC2358FD6F9\",\"link_as_account\":\"nano_33t5by1653nt196hfwm5q3wq7oxtaix97r7bhox5zn8eratrzoqsny49ftsd\",\"signature\": \"A5DB164F6B81648F914E49CAB533900C389FAAD64FBB24F6902F9261312B29F730D07E9BCCD21D918301419B4E05B181637CF8419ED4DCBF8EF2539EB2467F07\",\"work\": \"000bc55b014e807d\"}}',\r\n    '{\"action\":\"representatives_online\"}',\r\n    '{\"action\":\"successors\",\"block\":\"991CF190094C00F0B68E2E5F75F6BEE95A2E0BD93CEAA4A6734DB9F19B728948\",\"count\": \"5\"}',\r\n    '{\"action\":\"mnano_to_raw\",\"amount\":\"1\"}',\r\n    '{\"action\":\"mnano_from_raw\",\"amount\":\"1000000000000000000000000000000\"}',\r\n    '{\"action\":\"validate_account_number\",\"account\": \"nano_1111111111111111111111111111111111111111111111111117353trpda\"}',\r\n    '{\"action\":\"version\"}',\r\n    '{\"action\":\"verified_accounts\"}',\r\n    '{\"action\":\"price\"}',\r\n    \r\n  ],\r\n  // For dropdown titles\r\n  SAMPLE_COMMAND_NAMES: [\r\n    \"account_history\",\r\n    \"account_info\",\r\n    \"account_balance\",\r\n    \"account_key\",\r\n    \"account_representative\",\r\n    \"account_weight\",\r\n    \"active_difficulty\",\r\n    \"available_supply\",\r\n    \"block_info\",\r\n    \"block_account\",\r\n    \"block_count\",\r\n    \"chain\",\r\n    \"confirmation_quorum\",\r\n    \"delegators\",\r\n    \"delegators_count\",\r\n    \"frontiers\",\r\n    \"key_create\",\r\n    \"pending\",\r\n    \"pending_exists\",\r\n    \"process\",\r\n    \"representatives_online\",\r\n    \"successors\",\r\n    \"mnano_to_raw\",\r\n    \"mnano_from_raw\",\r\n    \"validate_account_number\",\r\n    \"version\",\r\n    \"verified_accounts\",\r\n    \"Nano price\"\r\n  ]\r\n}\r\n\r\n// Custom error class\r\nclass RPCError extends Error {\r\n  constructor(code, ...params) {\r\n    super(...params)\r\n\r\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, RPCError)\r\n    }\r\n    this.name = 'RPCError'\r\n    // Custom debugging information\r\n    this.code = code\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // QR css\r\n    this.qrClassesContainer = [\"QR-container\", \"QR-container-2x\", \"QR-container-4x\"]\r\n    this.qrClassesImg = [\"QR-img\", \"QR-img-2x\", \"QR-img-4x\"]\r\n\r\n    this.state = {\r\n      command: '',\r\n      key: '',\r\n      amount: 10,\r\n      nanoAmount: 0,\r\n      output: '',\r\n      validKey: false,\r\n      fetchingRPC: false,\r\n      paymentActive: false,\r\n      activeCommandId: 0,\r\n      activeCommandName: 'Select a sample',\r\n      useAuth: true,\r\n      tokenText1: \"\",\r\n      tokenText2: \"\",\r\n      tokenText3: \"\",\r\n      qrContent: '',\r\n      qrSize: 512,\r\n      qrState: 0,  //qr size\r\n      qrHidden: true,\r\n      payinfoHidden: true,\r\n      apiText: \"\",\r\n      tokenPrice: 0.0001, //temp price, real price grabbed from server\r\n    }\r\n\r\n    this.getRPC = this.getRPC.bind(this)\r\n    this.buyTokens = this.buyTokens.bind(this)\r\n    this.checkTokens = this.checkTokens.bind(this)\r\n    this.cancelOrder = this.cancelOrder.bind(this)\r\n    this.prepareForPayment = this.prepareForPayment.bind(this)\r\n    this.handleCommandChange = this.handleCommandChange.bind(this)\r\n    this.handleKeyChange = this.handleKeyChange.bind(this)\r\n    this.handleAmountChange = this.handleAmountChange.bind(this)\r\n    this.handleNanoChange = this.handleNanoChange.bind(this)\r\n    this.handleRPCError = this.handleRPCError.bind(this)\r\n    this.selectCommand = this.selectCommand.bind(this)\r\n    this.postData = this.postData.bind(this)\r\n    this.handleOptionChange = this.handleOptionChange.bind(this)\r\n    this.updateQR = this.updateQR.bind(this)\r\n    this.double = this.double.bind(this)\r\n  }\r\n\r\n  // Init component\r\n  componentDidMount() {\r\n    // try update the price\r\n    var command = {\r\n      action: \"tokenprice_check\",\r\n    }\r\n    this.postData(command)\r\n    .then((data) => {\r\n      if (\"token_price\" in data) {\r\n        let nano = this.state.amount * parseFloat(data.token_price)\r\n        this.setState({\r\n          nanoAmount: nano\r\n        })\r\n      }\r\n    })\r\n    .catch(function(error) {\r\n      this.handleRPCError(error)\r\n    }.bind(this))\r\n\r\n    // calculate nano cost regardless of if server respond or not\r\n    let nano = this.state.amount * this.state.tokenPrice\r\n    this.setState({\r\n      nanoAmount: nano\r\n    })\r\n  }\r\n\r\n  handleCommandChange(event) {\r\n    let command = event.target.value\r\n    try {\r\n      let query = $.param(JSON.parse(command)) //convert json to query string\r\n      this.setState({\r\n        apiText: query\r\n      })\r\n    }\r\n    catch {\r\n      this.setState({\r\n        apiText: \"Bad json format\"\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      command: command\r\n    })\r\n  }\r\n\r\n  handleKeyChange(event) {\r\n    let key = event.target.value\r\n    if (key.length === 64) {\r\n      this.setState({\r\n        validKey: true\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        validKey: false\r\n      })\r\n    }\r\n    this.setState({\r\n      key: key\r\n    })\r\n  }\r\n\r\n  handleAmountChange(event) {\r\n    if (event.target.value !== \"\") {\r\n      let amount = parseInt(event.target.value)\r\n      if (Number.isSafeInteger(amount)) {\r\n        // calculate nano cost\r\n        let nano = amount * this.state.tokenPrice\r\n        this.setState({\r\n          amount: amount,\r\n          nanoAmount: nano\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        amount: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  handleNanoChange(event) {\r\n    if (event.target.value !== \"\") {\r\n      let amount = event.target.value\r\n      if (Number.isSafeInteger(parseInt(amount)) || this.isFloat(parseFloat(amount))) {\r\n        // calculate tokens\r\n        let tokens = Math.round(parseFloat(amount) / this.state.tokenPrice)\r\n        this.setState({\r\n          nanoAmount: event.target.value,\r\n          amount: tokens\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({\r\n        nanoAmount: event.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  // Select Auth\r\n  handleOptionChange = changeEvent => {\r\n    this.setState({\r\n      useAuth: !this.state.useAuth\r\n    })\r\n  }\r\n\r\n  updateQR(address, amount=0) {\r\n    let raw = this.MnanoToRaw(amount.toString())\r\n    this.setState({\r\n      qrContent: \"nano:\"+address+\"?amount=\"+raw+\"&message=RPC Proxy Tokens\",\r\n    })\r\n    if (address === \"\") {\r\n      this.setState({\r\n        qrHidden: true,\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        qrHidden: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  // loop qr state 1x, 2x, 4x\r\n  double() {\r\n    var state = this.state.qrState\r\n    state = state + 1\r\n    if (state >= this.qrClassesContainer.length) {\r\n      state = 0\r\n    }\r\n    this.setState({\r\n      qrState: state\r\n    })\r\n  }\r\n\r\n  MnanoToRaw(input) {\r\n    return this.isNumeric(input) ? Nano.convert(input, {from: Nano.Unit.NANO, to: Nano.Unit.raw}) : 'N/A'\r\n  }\r\n\r\n  // Check if numeric string\r\n  isNumeric(val) {\r\n    //numerics and last character is not a dot and number of dots is 0 or 1\r\n    let isnum = /^-?\\d*\\.?\\d*$/.test(val)\r\n    if (isnum && String(val).slice(-1) !== '.') {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Check if float string\r\n  isFloat(x) {\r\n    return !!(x % 1)\r\n  }\r\n\r\n  // Change tool to view on main page\r\n  selectCommand(eventKey) {\r\n    let command = constants.SAMPLE_COMMANDS[eventKey]\r\n    let query = $.param(JSON.parse(command)) //convert json to query string\r\n    this.setState({\r\n      command: constants.SAMPLE_COMMANDS[eventKey],\r\n      activeCommandId: eventKey,\r\n      activeCommandName: constants.SAMPLE_COMMAND_NAMES[eventKey],\r\n      apiText: query\r\n    })\r\n  }\r\n\r\n  handleRPCError(error) {\r\n    this.setState({fetchingRPC: false})\r\n    if (error.code) {\r\n      console.log(\"RPC request failed: \"+error.message)\r\n      this.writeOutput({error:\"RPC request failed: \"+error.message})\r\n    }\r\n    else {\r\n      console.log(\"RPC request failed: \"+error)\r\n      this.writeOutput({error:\"RPC request failed: \"+error})\r\n    }\r\n  }\r\n\r\n  buyTokens(event) {\r\n    this.setState({payinfoHidden: false})\r\n\r\n    let amount = parseInt(this.state.amount)\r\n    if (Number.isInteger(amount) && amount > 0) {\r\n      var command = {\r\n        action: \"tokens_buy\",\r\n        token_amount: this.state.amount\r\n      }\r\n      if (this.state.key.length === 64) {\r\n        command.token_key = this.state.key\r\n      }\r\n      this.getRPC(null, command)\r\n    }\r\n  }\r\n\r\n  checkTokens(event) {\r\n    this.setState({payinfoHidden: true})\r\n    var command = {\r\n      action: \"tokens_check\",\r\n    }\r\n    if (this.state.key.length === 64) {\r\n      command.token_key = this.state.key\r\n      this.getRPC(null, command)\r\n    }\r\n  }\r\n\r\n  cancelOrder(event) {\r\n    this.setState({payinfoHidden: true})\r\n    var command = {\r\n      action: \"tokenorder_cancel\",\r\n    }\r\n    if (this.state.key.length === 64) {\r\n      command.token_key = this.state.key\r\n      this.getRPC(null, command)\r\n    }\r\n  }\r\n\r\n  // Make RPC call\r\n  getRPC(event, command=\"\") {\r\n    this.updateQR(\"\")\r\n\r\n    // Read command from text box if not provided from other function\r\n    if (command === \"\") {\r\n      this.setState({payinfoHidden: true})\r\n      try {\r\n        command = JSON.parse(this.state.command)\r\n        if (this.state.key.length === 64) {\r\n          command.token_key = this.state.key\r\n        }\r\n      }\r\n      catch(e) {\r\n        console.log(\"Could not parse json string\")\r\n        return\r\n      }\r\n    }\r\n\r\n    if (Object.keys(command).length > 0) {\r\n      this.setState({fetchingRPC: true})\r\n      this.postData(command)\r\n      .then((data) => {\r\n        this.setState({fetchingRPC: false})\r\n        this.writeOutput(data)\r\n      })\r\n      .catch(function(error) {\r\n        this.handleRPCError(error)\r\n      }.bind(this))\r\n    }\r\n  }\r\n\r\n  // Inform user how to pay and check status\r\n  prepareForPayment(json) {\r\n    this.setState({\r\n      tokenText1: 'Pay ' + json.payment_amount + 'Nano: <a href=\"nano:' + json.address + '?amount=' + this.MnanoToRaw(json.payment_amount.toString()) + '&message=RPC Proxy Tokens\">' + json.address + '</a>',\r\n      tokenText2: \"Request key (save): \" + json.token_key,\r\n      paymentActive: true\r\n    })\r\n    this.updateQR(json.address, json.payment_amount)\r\n\r\n    let command = {action:\"tokenorder_check\",token_key:json.token_key}\r\n\r\n    // Check status every second until payment completed or timed out\r\n    var timer = setInterval(() => {\r\n      this.postData(command)\r\n      .then((data) => {\r\n        if (\"order_time_left\" in data) {\r\n          if (parseInt(data.order_time_left) > 0) {\r\n            this.setState({tokenText3: \"You have \" + data.order_time_left + \"sec to pay\"})\r\n          }\r\n        }\r\n        else if (\"tokens_total\" in data && \"tokens_ordered\" in data) {\r\n          this.writeOutput(data)\r\n          this.setState({\r\n            tokenText1: \"Payment completed for \" + data.tokens_ordered + \" tokens! You now have \" + data.tokens_total + \" tokens to use\",\r\n            tokenText2: \"Request key: \" + json.token_key,\r\n            tokenText3: \"\",\r\n            paymentActive: false,\r\n          })\r\n          clearInterval(timer)\r\n          this.updateQR(\"\")\r\n        }\r\n        else if (\"error\" in data) {\r\n          this.writeOutput(data)\r\n          this.setState({\r\n            tokenText1: data.error,\r\n            tokenText2: \"\",\r\n            tokenText3: \"\",\r\n            paymentActive: false,\r\n          })\r\n          clearInterval(timer)\r\n          this.updateQR(\"\")\r\n        }\r\n        else {\r\n          this.writeOutput(data)\r\n          this.setState({\r\n            tokenText1: \"Unknown error occured\",\r\n            tokenText2: \"\",\r\n            tokenText3: \"\",\r\n            paymentActive: false,\r\n          })\r\n          clearInterval(timer)\r\n          this.updateQR(\"\")\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        this.setState({\r\n          tokenText1: \"\",\r\n          tokenText2: \"\",\r\n          tokenText3: \"\",\r\n          paymentActive: false,\r\n        })\r\n        clearInterval(timer)\r\n        this.updateQR(\"\")\r\n        this.handleRPCError(error)\r\n      }.bind(this))\r\n    },1000)\r\n  }\r\n\r\n  // Write result in output area\r\n  writeOutput(json) {\r\n    if ('address' in json) {\r\n      this.prepareForPayment(json)\r\n    }\r\n    try {\r\n      this.setState({\r\n        output: JSON.stringify(json, null, 2)\r\n      })\r\n    }\r\n    catch(error) {\r\n      console.log(\"Bad JSON: \"+error)\r\n    }\r\n  }\r\n\r\n  // Post RPC data with timeout and catch errors\r\n  async postData(data = {}, server=constants.RPC_SERVER) {\r\n    let didTimeOut = false;\r\n    var headers = {}\r\n    if (this.state.useAuth) {\r\n      headers.Authorization = 'Basic ' + Base64.encode(constants.RPC_CREDS)\r\n    }\r\n\r\n    return new Promise(function(resolve, reject) {\r\n        const timeout = setTimeout(function() {\r\n            didTimeOut = true;\r\n            reject(new Error('Request timed out'))\r\n        }, RPC_TIMEOUT);\r\n\r\n        fetch(server, {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          mode: 'cors', // no-cors, *cors, same-origin\r\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n          credentials: 'same-origin', // include, *same-origin, omit\r\n          headers: headers,\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *client\r\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        })\r\n        .then(async function(response) {\r\n            // Clear the timeout as cleanup\r\n            clearTimeout(timeout)\r\n            if(!didTimeOut) {\r\n              if(response.status === 200) {\r\n                  resolve(await response.json())\r\n              }\r\n              // catch blocked (to display on the site)\r\n              else if(response.status === 429) {\r\n                  resolve({\"error\":await response.text()})\r\n              }\r\n              // catch unauthorized (to display on the site)\r\n              else if(response.status === 401) {\r\n                  resolve({\"error\": \"unauthorized\"})\r\n              }\r\n              else if(response.status === 500) {\r\n                  resolve(await response.json())\r\n              }\r\n              else {\r\n                throw new RPCError(response.status, resolve(response))\r\n              }\r\n            }\r\n        })\r\n        .catch(function(err) {\r\n            // Rejection already happened with setTimeout\r\n            if(didTimeOut) return\r\n            // Reject with error\r\n            reject(err)\r\n        })\r\n    })\r\n    .then(async function(result) {\r\n        // Request success and no timeout\r\n        return result\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h3>Demo client for communicating with <a href=\"https://github.com/Joohansson/NanoRPCProxy\">NanoRPCProxy</a></h3>\r\n          <p>Send to a live Nano node using <a href=\"https://docs.nano.org/commands/rpc-protocol/\">RPC json requests</a></p>\r\n          <ul>\r\n            <li> Everyone are allowed x requests/day (shown in the response). Purchase optional tokens if you need more.</li>\r\n            <li> Tokens can be refilled/extended using the same Request Key. The order is done when said Nano (or more) is registered.</li>\r\n            <li> If you send nano but order fail you can claim the private key. The old deposit account will be destroyed/replaced.</li>\r\n          </ul>\r\n          <DropdownButton\r\n            className=\"command-dropdown\"\r\n            title={this.state.activeCommandName}\r\n            key={this.state.activeCommandId}\r\n            id={`dropdown-basic-${this.state.activeCommandId}`}>\r\n            {constants.SAMPLE_COMMAND_NAMES.map(function(command, index){\r\n              return <Dropdown.Item eventKey={index} key={index} onSelect={this.selectCommand}>{command}</Dropdown.Item>;\r\n            }.bind(this))}\r\n          </DropdownButton>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"command\">\r\n                RPC Command\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl id=\"command\" aria-describedby=\"command\" value={this.state.command} title=\"Command to send\" maxLength=\"200\" placeholder='RPC command' onChange={this.handleCommandChange} autoComplete=\"off\"/>\r\n          </InputGroup>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"key\">\r\n                Request Key\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl id=\"key\" aria-describedby=\"key\" value={this.state.key} title=\"Your personal token key\" maxLength=\"64\" placeholder='Optional: Get key by purchase tokens. Key can also be used to refill/check your tokens or claim priv key.' onChange={this.handleKeyChange} autoComplete=\"off\"/>\r\n          </InputGroup>\r\n\r\n          <div className=\"token-text\">\r\n            <span>GET Query Equivalent (need basic auth headers if using server auth):<br/></span><a href={constants.RPC_SERVER+\"/?\"+this.state.apiText}>{constants.RPC_SERVER+\"/?\"+this.state.apiText}</a>\r\n          </div>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3 hidden\">\r\n            <div className=\"auth-title\" title=\"Use authentication\">Use Auth:</div>\r\n            <div className=\"form-check form-check-inline index-checkbox\">\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"auth-check\" value={this.state.useAuth} checked={this.state.useAuth} onChange={this.handleOptionChange}/>\r\n            </div>\r\n          </InputGroup>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <Button className=\"btn-medium\" variant=\"primary\" disabled={this.state.fetchingRPC || this.state.paymentActive} onClick={this.getRPC}>Server Request</Button>\r\n          </InputGroup>\r\n\r\n          <div className=\"line\"></div>\r\n          <div className=\"line\"></div>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"amount\">\r\n                Token Amount\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl className=\"edit-short\" id=\"amount\" aria-describedby=\"amount\" value={this.state.amount} title=\"Number of tokens to purchase\" maxLength=\"9\" placeholder='' onChange={this.handleAmountChange} autoComplete=\"off\"/>\r\n          </InputGroup>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"nano\">\r\n                Nano Amount\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl className=\"edit-short\" id=\"nano\" aria-describedby=\"nano\" value={this.state.nanoAmount} title=\"Amount of Nano to pay\" maxLength=\"9\" placeholder='' onChange={this.handleNanoChange} autoComplete=\"off\"/>\r\n          </InputGroup>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <Button className=\"btn-medium\" variant=\"primary\" disabled={this.state.fetchingRPC || this.state.paymentActive} onClick={this.buyTokens}>Buy/Refill tokens</Button>\r\n            <Button className=\"btn-medium\" variant=\"primary\" disabled={this.state.fetchingRPC || !this.state.validKey} onClick={this.checkTokens}>Check my tokens</Button>\r\n            <Button className=\"btn-medium\" variant=\"primary\" disabled={this.state.fetchingRPC || !this.state.validKey} onClick={this.cancelOrder}>Claim back order</Button>\r\n          </InputGroup>\r\n\r\n          <div className={ this.state.payinfoHidden ? \"hidden token-text\" : \"token-text\"}>\r\n            <p>{Parser(this.state.tokenText1)}</p>\r\n            <p>{this.state.tokenText2}</p>\r\n            <p>{this.state.tokenText3}</p>\r\n          </div>\r\n\r\n          <div className={ this.state.qrHidden ? \"hidden\" : \"\"}>\r\n            <div className={this.qrClassesContainer[this.state.qrState]}>\r\n              <QrImageStyle className={this.qrClassesImg[this.state.qrState]} content={this.state.qrContent} onClick={this.double} title=\"Click to toggle size\" size={this.state.qrSize} />\r\n            </div>\r\n          </div>\r\n\r\n          <InputGroup size=\"sm\" className=\"mb-3\">\r\n            <FormControl id=\"output-area\" aria-describedby=\"output\" as=\"textarea\" rows=\"12\" placeholder=\"\" value={this.state.output} readOnly/>\r\n          </InputGroup>\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// If sharing source code publically like on github, this file can be git ignored. The creds will be hidden inside the react app\r\nexport const RPC_SERVER = 'http://localhost:9950/proxy'\r\nexport const RPC_CREDS = 'user1:user1'\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}